(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>a});var i=n(537),r=n.n(i),o=n(645),s=n.n(o)()(r());s.push([t.id,"body {\n  background-color: black;\n  color: white;\n  position: relative;\n}\n\n.content {\n  display: grid;\n  grid-template-columns: 1fr 6fr;\n}\n\n.content-window {\n  background-color:aqua;\n}\n\n.new-list-div {\n  padding-left: 20px;\n}\n\n.form-div {\n  background-color: white;\n  color: black;\n}\n\n.finished {\n  background-color: gray;\n  color: black;\n  text-decoration: line-through;\n}\n\n.main-list {\n  border-style: dashed;\n  border-color: red;\n}\n\n.top-bar {\n  display: flex;\n  flex-direction: row;\n  align-content: space-between;\n  border-style: solid;\n  border-color: white;\n}\n\n.top-bar-date {\n  padding-left: 20px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,uBAAuB;EACvB,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,YAAY;EACZ,6BAA6B;AAC/B;;AAEA;EACE,oBAAoB;EACpB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,4BAA4B;EAC5B,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB",sourcesContent:["body {\n  background-color: black;\n  color: white;\n  position: relative;\n}\n\n.content {\n  display: grid;\n  grid-template-columns: 1fr 6fr;\n}\n\n.content-window {\n  background-color:aqua;\n}\n\n.new-list-div {\n  padding-left: 20px;\n}\n\n.form-div {\n  background-color: white;\n  color: black;\n}\n\n.finished {\n  background-color: gray;\n  color: black;\n  text-decoration: line-through;\n}\n\n.main-list {\n  border-style: dashed;\n  border-color: red;\n}\n\n.top-bar {\n  display: flex;\n  flex-direction: row;\n  align-content: space-between;\n  border-style: solid;\n  border-color: white;\n}\n\n.top-bar-date {\n  padding-left: 20px;\n}"],sourceRoot:""}]);const a=s},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,r,o){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(i)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(s[c]=!0)}for(var d=0;d<t.length;d++){var l=[].concat(t[d]);i&&s[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),o="/*# ".concat(r," */"),s=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(s).concat([o]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var o={},s=[],a=0;a<t.length;a++){var c=t[a],d=i.base?c[0]+i.base:c[0],l=o[d]||0,u="".concat(d," ").concat(l);o[d]=l+1;var p=n(u),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var h=r(m,i);i.byIndex=a,e.splice(a,0,{identifier:u,updater:h,references:1})}s.push(u)}return s}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var o=i(t=t||[],r=r||{});return function(t){t=t||[];for(var s=0;s<o.length;s++){var a=n(o[s]);e[a].references--}for(var c=i(t,r),d=0;d<o.length;d++){var l=n(o[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=c}}},569:t=>{var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,r&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(i){var r=e[i];if(void 0!==r)return r.exports;var o=e[i]={id:i,exports:{}};return t[i](o,o.exports,n),o.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{var t=n(379),e=n.n(t),i=n(795),r=n.n(i),o=n(569),s=n.n(o),a=n(565),c=n.n(a),d=n(216),l=n.n(d),u=n(589),p=n.n(u),m=n(426),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=s().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=l(),e()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;class A{itemList;ownDiv;newListContainer;listDepth;ownerList;ownerItem;constructor(t,e=0,n=null,i=null){this.itemList=[],this.ownDiv=t,this.newListContainer=document.createElement("div"),this.listDepth=e,this.ownerList=n,this.ownerItem=i}addItem(t){this.itemList.push(t),this.showList}makeListADiv(t){const e=document.createElement("div"),n=document.createElement("div"),i=document.createElement("div"),r=t.itemList;return e.setAttribute("class","new-list-div"),e.appendChild(n),e.appendChild(i),e.appendChild(this.newListContainer),r.showList,n.innerText=t.title,i.innerText=t.description,e}removeItem(t){this.itemList.splice(t,1),this.showList}sortList(){this.itemList.sort(((t,e)=>t.priority-e.priority))}get showList(){let t=document.createElement("div");if(0===this.itemList.length)t.innerHTML="";else{this.sortList();for(let e=0;e<this.itemList.length;e++){let n=document.createElement("div"),i=E(e,this.listDepth);n=this.makeListADiv(this.itemList[e]),n.appendChild(i),t.appendChild(n),t.appendChild(b(this.ownDiv.parentElement,this,e)),this.itemList[e].showList}}return t.appendChild(function(t,e){const n=document.createElement("button");return n.setAttribute("class","show-add-form"),n.setAttribute("id","show-add-form"),n.innerText="Add Task",n.addEventListener("click",(()=>{!function(t,e,n){const i=t.parentElement,r=document.createElement("div"),o=new f(e,n);let s=b(r);r.setAttribute("class","new-div"),i.appendChild(r),r.appendChild(s),r.appendChild(o.div)}(n,t,e)})),n}(this,this.listDepth)),this.ownDiv.innerHTML="",this.ownDiv.appendChild(t),t}}class v{title;description;priority;finished;internalSteps;itemList;itemDiv;constructor(t,e,n,i,r){this.title=t,this.description=e,this.priority=n,this.itemList=new A(i.newListContainer,r+1,i,this),this.finished=!1,this.itemDiv=this.itemList.ownDIv}}class f{parentItem;title;description;priority;listDepth;constructor(t,e){this.parentItem=t,this.title=this.titleForm(),this.description=this.descriptionForm(),this.priority=this.priorityForm(),this.listDepth=e;let n=this.makeButton();this.formDiv=document.createElement("div"),this.formDiv.setAttribute("class","form-div"),this.formDiv.appendChild(this.title),this.formDiv.appendChild(this.description),this.formDiv.appendChild(this.priority),this.formDiv.appendChild(n),n.addEventListener("click",(()=>{this.addItemToButton()}))}addItemToButton(){const t=new v(this.title.lastChild.value,this.description.lastChild.value,this.priority.lastChild.value,this.parentItem,this.listDepth);this.parentItem.addItem(t),this.parentItem.showList}makeButton(){let t=document.createElement("button");return t.setAttribute("id","toDoSubmit"),t.innerHTML="Add Item",t}titleForm(){let t=document.createElement("div"),e=document.createElement("div"),n=document.createElement("input");return e.textContent="Task",n.setAttribute("type","text"),n.setAttribute("id","title"),n.setAttribute("name","title"),t.appendChild(e),t.appendChild(n),t}descriptionForm(){let t=document.createElement("div"),e=document.createElement("div"),n=document.createElement("input");return e.textContent="Description",n.setAttribute("type","text"),n.setAttribute("id","description"),n.setAttribute("name","description"),t.appendChild(e),t.appendChild(n),t}get div(){return this.formDiv}priorityForm(){let t=document.createElement("div"),e=document.createElement("div"),n=document.createElement("input");return t.textContent="Priority",n.setAttribute("type","number"),n.setAttribute("id","priority"),n.setAttribute("name","priority"),t.appendChild(e),t.appendChild(n),t}}function b(t,e=null,n=null){const i=document.createElement("button");return i.setAttribute("class","remove-element"),i.setAttribute("id","remove-element"),i.innerText="Cancel",i.addEventListener("click",(()=>{!function(t){t!=document.getElementById("content")&&t.parentElement.removeChild(t)}(t),null!=e&&e.removeItem(n)})),i}function E(t,e){const n=document.createElement("input");return n.setAttribute("type","checkbox"),n.addEventListener("change",(()=>{!function(t,e){let n=document.getElementById(`finished-${t}-${e}`),i=n.parentElement;!0===n.checked?i.classList.add("finished"):i.classList.remove("finished")}(t,e)})),n.setAttribute("id",`finished-${t}-${e}`),n.setAttribute("name",`finished-${t}-${e}`),n}const C=document.getElementById("main-list");let y=(new Date).toLocaleDateString();document.getElementById("top-bar-date").innerText=y,new A(C).showList})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RSxFQUFVakUsYUFBYSxRQUFTLGtCQUNoQ2lFLEVBQVVqRSxhQUFhLEtBQU0sa0JBQzdCaUUsRUFBVWhCLFVBQVksU0FDdEJnQixFQUFVQyxpQkFBaUIsU0FBUyxNQXVDdEMsU0FBbUIwQixHQUNiQSxHQUFlNUcsU0FBUzZHLGVBQWUsWUFDekJELEVBQVc3QixjQUNqQjFELFlBQVl1RixHQXpDdEJFLENBQVVGLEdBQ08sTUFBYnRELEdBQ0ZBLEVBQVVjLFdBQVc3RSxNQUdsQjBGLEVBWVQsU0FBU0osRUFBcUJ0RixFQUFPOEQsR0FDbkMsTUFBTTBELEVBQVMvRyxTQUFTVyxjQUFjLFNBS3RDLE9BSkFvRyxFQUFPL0YsYUFBYSxPQUFRLFlBQzVCK0YsRUFBTzdCLGlCQUFpQixVQUFVLE1BTXBDLFNBQXdCM0YsRUFBTzhELEdBRTdCLElBQUkyRCxFQUFlaEgsU0FBUzZHLGVBQWUsWUFBWXRILEtBQVM4RCxLQUM1RDRELEVBQVlELEVBQWFqQyxlQUNBLElBQXpCaUMsRUFBYUUsUUFDZkQsRUFBVUUsVUFBVUMsSUFBSSxZQUd4QkgsRUFBVUUsVUFBVS9ILE9BQU8sWUFkWWlJLENBQWU5SCxFQUFPOEQsTUFDL0QwRCxFQUFPL0YsYUFBYSxLQUFNLFlBQVl6QixLQUFTOEQsS0FDL0MwRCxFQUFPL0YsYUFBYSxPQUFRLFlBQVl6QixLQUFTOEQsS0FDMUMwRCxFQXdCVCxNQUFNTyxFQUFXdEgsU0FBUzZHLGVBQWUsYUFDekMsSUFBSVUsR0FBYSxJQUFJQyxNQUFPQyxxQkFDWHpILFNBQVM2RyxlQUFlLGdCQUM5QjVDLFVBQVlzRCxFQUNELElBQUl0RSxFQUFTcUUsR0FDbkIzRCxVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG8vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3RvZG8vLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJib2R5IHtcXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4uY29udGVudCB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgNmZyO1xcbn1cXG5cXG4uY29udGVudC13aW5kb3cge1xcbiAgYmFja2dyb3VuZC1jb2xvcjphcXVhO1xcbn1cXG5cXG4ubmV3LWxpc3QtZGl2IHtcXG4gIHBhZGRpbmctbGVmdDogMjBweDtcXG59XFxuXFxuLmZvcm0tZGl2IHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgY29sb3I6IGJsYWNrO1xcbn1cXG5cXG4uZmluaXNoZWQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcXG4gIGNvbG9yOiBibGFjaztcXG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xcbn1cXG5cXG4ubWFpbi1saXN0IHtcXG4gIGJvcmRlci1zdHlsZTogZGFzaGVkO1xcbiAgYm9yZGVyLWNvbG9yOiByZWQ7XFxufVxcblxcbi50b3AtYmFyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgYWxpZ24tY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGJvcmRlci1zdHlsZTogc29saWQ7XFxuICBib3JkZXItY29sb3I6IHdoaXRlO1xcbn1cXG5cXG4udG9wLWJhci1kYXRlIHtcXG4gIHBhZGRpbmctbGVmdDogMjBweDtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLHVCQUF1QjtFQUN2QixZQUFZO0VBQ1osa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLG9CQUFvQjtFQUNwQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLDRCQUE0QjtFQUM1QixtQkFBbUI7RUFDbkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImJvZHkge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxuICBjb2xvcjogd2hpdGU7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5jb250ZW50IHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA2ZnI7XFxufVxcblxcbi5jb250ZW50LXdpbmRvdyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOmFxdWE7XFxufVxcblxcbi5uZXctbGlzdC1kaXYge1xcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xcbn1cXG5cXG4uZm9ybS1kaXYge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICBjb2xvcjogYmxhY2s7XFxufVxcblxcbi5maW5pc2hlZCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xcbiAgY29sb3I6IGJsYWNrO1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxufVxcblxcbi5tYWluLWxpc3Qge1xcbiAgYm9yZGVyLXN0eWxlOiBkYXNoZWQ7XFxuICBib3JkZXItY29sb3I6IHJlZDtcXG59XFxuXFxuLnRvcC1iYXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICBhbGlnbi1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcXG4gIGJvcmRlci1jb2xvcjogd2hpdGU7XFxufVxcblxcbi50b3AtYmFyLWRhdGUge1xcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCAnLi9zdHlsZS5jc3MnO1xuXG5jbGFzcyBUb0RvTGlzdCB7XG5cbiAgaXRlbUxpc3Q7XG4gIG93bkRpdjtcbiAgbmV3TGlzdENvbnRhaW5lcjtcbiAgbGlzdERlcHRoO1xuICBvd25lckxpc3Q7XG4gIG93bmVySXRlbTtcblxuICBjb25zdHJ1Y3Rvcihvd25ESXYsIGxpc3REZXB0aCA9IDAsIG93bmVyTGlzdCA9IG51bGwsIG93bmVySXRlbSA9IG51bGwpIHtcbiAgICB0aGlzLml0ZW1MaXN0ID0gW107XG4gICAgdGhpcy5vd25EaXYgPSBvd25ESXY7XG4gICAgdGhpcy5uZXdMaXN0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICB0aGlzLmxpc3REZXB0aCA9IGxpc3REZXB0aDtcbiAgICB0aGlzLm93bmVyTGlzdCA9IG93bmVyTGlzdDtcbiAgICB0aGlzLm93bmVySXRlbSA9IG93bmVySXRlbTtcbiAgfVxuXG4gIGFkZEl0ZW0oaXRlbSkge1xuICAgIHRoaXMuaXRlbUxpc3QucHVzaChpdGVtKVxuICAgIHRoaXMuc2hvd0xpc3Q7XG4gIH1cblxuICBtYWtlTGlzdEFEaXYodGhpc0xpc3QpIHtcbiAgICBjb25zdCBuZXdMaXN0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICBjb25zdCB0aXRsZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgY29uc3QgZGVzY3JpcHRpb25EaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgIGNvbnN0IG5ld0xpc3QgPSB0aGlzTGlzdC5pdGVtTGlzdFxuXG4gICAgbmV3TGlzdERpdi5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ25ldy1saXN0LWRpdicpXG5cbiAgICBuZXdMaXN0RGl2LmFwcGVuZENoaWxkKHRpdGxlRGl2KVxuICAgIG5ld0xpc3REaXYuYXBwZW5kQ2hpbGQoZGVzY3JpcHRpb25EaXYpXG4gICAgbmV3TGlzdERpdi5hcHBlbmRDaGlsZCh0aGlzLm5ld0xpc3RDb250YWluZXIpXG4gICAgbmV3TGlzdC5zaG93TGlzdFxuXG4gICAgdGl0bGVEaXYuaW5uZXJUZXh0ID0gdGhpc0xpc3QudGl0bGVcbiAgICBkZXNjcmlwdGlvbkRpdi5pbm5lclRleHQgPSB0aGlzTGlzdC5kZXNjcmlwdGlvblxuXG4gICAgcmV0dXJuIG5ld0xpc3REaXY7XG4gIH1cblxuICByZW1vdmVJdGVtKGl0ZW0pIHtcbiAgICB0aGlzLml0ZW1MaXN0LnNwbGljZShpdGVtLDEpO1xuICAgIHRoaXMuc2hvd0xpc3RcbiAgfVxuXG4gIHNvcnRMaXN0KCkge1xuICAgIHRoaXMuaXRlbUxpc3Quc29ydCgoYSxiKSA9PiB7XG4gICAgICByZXR1cm4gYS5wcmlvcml0eSAtIGIucHJpb3JpdHk7XG4gICAgfSk7XG4gIH1cblxuICBnZXQgc2hvd0xpc3QoKXtcbiAgICBsZXQgbGlzdERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgaWYgKHRoaXMuaXRlbUxpc3QubGVuZ3RoID09PSAwKSB7XG4gICAgICBsaXN0RGl2LmlubmVySFRNTCA9ICcnXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgdGhpcy5zb3J0TGlzdCgpO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLml0ZW1MaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxldCBpdGVtRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGxldCBuZXdDaGVja0JveCA9IG1ha2VGaW5pc2hlZENoZWNrQm94KGksIHRoaXMubGlzdERlcHRoKTtcbiAgICAgICAgaXRlbURpdiA9IHRoaXMubWFrZUxpc3RBRGl2KHRoaXMuaXRlbUxpc3RbaV0pO1xuICAgICAgICBpdGVtRGl2LmFwcGVuZENoaWxkKG5ld0NoZWNrQm94KVxuICAgICAgICBsaXN0RGl2LmFwcGVuZENoaWxkKGl0ZW1EaXYpO1xuICAgICAgICBsaXN0RGl2LmFwcGVuZENoaWxkKG1ha2VSZW1vdmVCdXR0b24odGhpcy5vd25EaXYucGFyZW50RWxlbWVudCwgdGhpcywgaSkpICAgICAgICBcbiAgICAgICAgdGhpcy5pdGVtTGlzdFtpXS5zaG93TGlzdDtcbiAgICAgIH07XG4gICAgfTtcbiAgICBsaXN0RGl2LmFwcGVuZENoaWxkKG1ha2VUYXNrQnV0dG9uKHRoaXMsIHRoaXMubGlzdERlcHRoKSlcbiAgICB0aGlzLm93bkRpdi5pbm5lckhUTUwgPSBcIlwiO1xuICAgIHRoaXMub3duRGl2LmFwcGVuZENoaWxkKGxpc3REaXYpO1xuICAgIHJldHVybiBsaXN0RGl2O1xuICB9O1xuXG4gIFxufVxuXG5cbmNsYXNzIFRvRG9JdGVtIHtcblxuICB0aXRsZTtcbiAgZGVzY3JpcHRpb247XG4gIHByaW9yaXR5O1xuICBmaW5pc2hlZDtcbiAgaW50ZXJuYWxTdGVwcztcbiAgaXRlbUxpc3Q7XG4gIGl0ZW1EaXY7XG5cbiAgY29uc3RydWN0b3IodGl0bGUsIGRlc2NyaXB0aW9uLCBwcmlvcml0eSwgcGFyZW50SXRlbSwgbGlzdERlcHRoKSB7XG4gICAgdGhpcy50aXRsZSA9IHRpdGxlO1xuICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHk7XG4gICAgdGhpcy5pdGVtTGlzdCA9IG5ldyBUb0RvTGlzdChwYXJlbnRJdGVtLm5ld0xpc3RDb250YWluZXIsIChsaXN0RGVwdGggKyAxKSwgcGFyZW50SXRlbSwgdGhpcyk7XG4gICAgdGhpcy5maW5pc2hlZCA9IGZhbHNlO1xuICAgIHRoaXMuaXRlbURpdiA9IHRoaXMuaXRlbUxpc3Qub3duREl2XG4gIH1cblxufVxuXG5jbGFzcyBUb0RvRm9ybSB7XG5cbiAgcGFyZW50SXRlbTtcbiAgdGl0bGU7XG4gIGRlc2NyaXB0aW9uO1xuICBwcmlvcml0eTtcbiAgbGlzdERlcHRoO1xuXG4gIGNvbnN0cnVjdG9yKHBhcmVudEl0ZW0sIGxpc3REZXB0aCkge1xuICAgIHRoaXMucGFyZW50SXRlbSA9IHBhcmVudEl0ZW07XG4gICAgdGhpcy50aXRsZSA9IHRoaXMudGl0bGVGb3JtKCk7XG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IHRoaXMuZGVzY3JpcHRpb25Gb3JtKCk7XG4gICAgdGhpcy5wcmlvcml0eSA9IHRoaXMucHJpb3JpdHlGb3JtKCk7XG4gICAgdGhpcy5saXN0RGVwdGggPSBsaXN0RGVwdGg7XG4gICAgbGV0IGFkZEJ1dHRvbiA9IHRoaXMubWFrZUJ1dHRvbigpO1xuXG4gICAgdGhpcy5mb3JtRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdGhpcy5mb3JtRGl2LnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnZm9ybS1kaXYnKTtcbiAgICB0aGlzLmZvcm1EaXYuYXBwZW5kQ2hpbGQodGhpcy50aXRsZSk7XG4gICAgdGhpcy5mb3JtRGl2LmFwcGVuZENoaWxkKHRoaXMuZGVzY3JpcHRpb24pO1xuICAgIHRoaXMuZm9ybURpdi5hcHBlbmRDaGlsZCh0aGlzLnByaW9yaXR5KVxuICAgIHRoaXMuZm9ybURpdi5hcHBlbmRDaGlsZChhZGRCdXR0b24pO1xuXG4gICAgYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdGhpcy5hZGRJdGVtVG9CdXR0b24oKTtcbiAgICB9KTtcbiAgfVxuXG4gIGFkZEl0ZW1Ub0J1dHRvbigpIHsgXG4gICAgY29uc3QgbmV3SXRlbSA9IG5ldyBUb0RvSXRlbSh0aGlzLnRpdGxlLmxhc3RDaGlsZC52YWx1ZSwgdGhpcy5kZXNjcmlwdGlvbi5sYXN0Q2hpbGQudmFsdWUsIHRoaXMucHJpb3JpdHkubGFzdENoaWxkLnZhbHVlLCB0aGlzLnBhcmVudEl0ZW0sIHRoaXMubGlzdERlcHRoKVxuICAgIHRoaXMucGFyZW50SXRlbS5hZGRJdGVtKG5ld0l0ZW0pXG4gICAgdGhpcy5wYXJlbnRJdGVtLnNob3dMaXN0O1xuICB9O1xuXG4gIG1ha2VCdXR0b24oKSB7XG4gICAgbGV0IG5ld0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIG5ld0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3RvRG9TdWJtaXQnKVxuICAgIG5ld0J1dHRvbi5pbm5lckhUTUwgPSAnQWRkIEl0ZW0nO1xuXG4gICAgcmV0dXJuIG5ld0J1dHRvbjtcbiAgfVxuXG4gIHRpdGxlRm9ybSgpIHtcbiAgICBsZXQgdGl0bGVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBsZXQgaW5wdXREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBsZXQgdGl0bGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG5cbiAgICBpbnB1dERpdi50ZXh0Q29udGVudCA9ICdUYXNrJztcbiAgICB0aXRsZUlucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG4gICAgdGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3RpdGxlJyk7XG4gICAgdGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAndGl0bGUnKTtcblxuICAgIHRpdGxlRGl2LmFwcGVuZENoaWxkKGlucHV0RGl2KTtcbiAgICB0aXRsZURpdi5hcHBlbmRDaGlsZCh0aXRsZUlucHV0KTtcblxuICAgIHJldHVybiB0aXRsZURpdjtcbiAgfVxuXG4gIGRlc2NyaXB0aW9uRm9ybSgpIHtcbiAgICBsZXQgdGl0bGVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBsZXQgaW5wdXREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBsZXQgdGl0bGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG5cbiAgICBpbnB1dERpdi50ZXh0Q29udGVudCA9ICdEZXNjcmlwdGlvbic7XG4gICAgdGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICAgIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsICdkZXNjcmlwdGlvbicpO1xuICAgIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCduYW1lJywgJ2Rlc2NyaXB0aW9uJyk7XG5cbiAgICB0aXRsZURpdi5hcHBlbmRDaGlsZChpbnB1dERpdik7XG4gICAgdGl0bGVEaXYuYXBwZW5kQ2hpbGQodGl0bGVJbnB1dCk7XG5cbiAgICByZXR1cm4gdGl0bGVEaXY7XG4gIH1cblxuICBnZXQgZGl2KCkge1xuICAgIHJldHVybiB0aGlzLmZvcm1EaXY7XG4gIH1cblxuICBwcmlvcml0eUZvcm0oKSB7XG4gICAgbGV0IHByaW9yaXR5RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbGV0IGlucHV0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbGV0IHByaW9yaXR5SW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuXG4gICAgcHJpb3JpdHlEaXYudGV4dENvbnRlbnQgPSAnUHJpb3JpdHknO1xuICAgIHByaW9yaXR5SW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ251bWJlcicpO1xuICAgIHByaW9yaXR5SW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsICdwcmlvcml0eScpO1xuICAgIHByaW9yaXR5SW5wdXQuc2V0QXR0cmlidXRlKCduYW1lJywgJ3ByaW9yaXR5Jyk7XG5cbiAgICBwcmlvcml0eURpdi5hcHBlbmRDaGlsZChpbnB1dERpdik7XG4gICAgcHJpb3JpdHlEaXYuYXBwZW5kQ2hpbGQocHJpb3JpdHlJbnB1dCk7XG5cbiAgICByZXR1cm4gcHJpb3JpdHlEaXY7XG4gIH1cblxufVxuXG5cblxuXG5cbmZ1bmN0aW9uIGFkZEZvcm0oYWRkQnV0dG9uLCBwYXJlbnRJdGVtLCBsaXN0RGVwdGgpe1xuICBjb25zdCBwYXJlbnRFbGVtZW50ID0gYWRkQnV0dG9uLnBhcmVudEVsZW1lbnQ7XG4gIGNvbnN0IG5ld0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjb25zdCB0ZXN0Rm9ybSA9IG5ldyBUb0RvRm9ybShwYXJlbnRJdGVtLCBsaXN0RGVwdGgpO1xuICBsZXQgcmVtb3ZlQnV0dG9uID0gbWFrZVJlbW92ZUJ1dHRvbihuZXdEaXYpO1xuICBuZXdEaXYuc2V0QXR0cmlidXRlKCdjbGFzcycsICduZXctZGl2Jyk7XG5cbiAgcGFyZW50RWxlbWVudC5hcHBlbmRDaGlsZChuZXdEaXYpO1xuICBuZXdEaXYuYXBwZW5kQ2hpbGQocmVtb3ZlQnV0dG9uKTtcbiAgXG4gIG5ld0Rpdi5hcHBlbmRDaGlsZCh0ZXN0Rm9ybS5kaXYpO1xufVxuXG5cbmZ1bmN0aW9uIG1ha2VSZW1vdmVCdXR0b24ocmVtb3ZlZERpdiwgb3duZXJMaXN0ID0gbnVsbCwgaW5kZXggPSBudWxsKXtcbiAgY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcbiAgYWRkQnV0dG9uLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAncmVtb3ZlLWVsZW1lbnQnKVxuICBhZGRCdXR0b24uc2V0QXR0cmlidXRlKCdpZCcsICdyZW1vdmUtZWxlbWVudCcpXG4gIGFkZEJ1dHRvbi5pbm5lclRleHQgPSBcIkNhbmNlbFwiXG4gIGFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICByZW1vdmVEaXYocmVtb3ZlZERpdilcbiAgICBpZiAob3duZXJMaXN0ICE9IG51bGwpIHtcbiAgICAgIG93bmVyTGlzdC5yZW1vdmVJdGVtKGluZGV4KTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gYWRkQnV0dG9uO1xufVxuXG5mdW5jdGlvbiBtYWtlVGFza0J1dHRvbihwYXJlbnRJdGVtLCBsaXN0RGVwdGgpe1xuICBjb25zdCBhZGRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKVxuICBhZGRCdXR0b24uc2V0QXR0cmlidXRlKCdjbGFzcycsICdzaG93LWFkZC1mb3JtJylcbiAgYWRkQnV0dG9uLnNldEF0dHJpYnV0ZSgnaWQnLCAnc2hvdy1hZGQtZm9ybScpXG4gIGFkZEJ1dHRvbi5pbm5lclRleHQgPSBcIkFkZCBUYXNrXCJcbiAgYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge2FkZEZvcm0oYWRkQnV0dG9uLCBwYXJlbnRJdGVtLCBsaXN0RGVwdGgpfSk7XG4gIHJldHVybiBhZGRCdXR0b247XG59XG5cbmZ1bmN0aW9uIG1ha2VGaW5pc2hlZENoZWNrQm94KGluZGV4LCBsaXN0RGVwdGgpe1xuICBjb25zdCBhZGRCb3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICBhZGRCb3guc2V0QXR0cmlidXRlKCd0eXBlJywgJ2NoZWNrYm94Jyk7XG4gIGFkZEJveC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsICgpID0+IHt0b2dnbGVGaW5pc2hlZChpbmRleCwgbGlzdERlcHRoKX0pXG4gIGFkZEJveC5zZXRBdHRyaWJ1dGUoJ2lkJywgYGZpbmlzaGVkLSR7aW5kZXh9LSR7bGlzdERlcHRofWApO1xuICBhZGRCb3guc2V0QXR0cmlidXRlKCduYW1lJywgYGZpbmlzaGVkLSR7aW5kZXh9LSR7bGlzdERlcHRofWApO1xuICByZXR1cm4gYWRkQm94O1xufVxuXG5mdW5jdGlvbiB0b2dnbGVGaW5pc2hlZChpbmRleCwgbGlzdERlcHRoKXtcblxuICBsZXQgY2hlY2tDaGVja2VkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYGZpbmlzaGVkLSR7aW5kZXh9LSR7bGlzdERlcHRofWApIFxuICBsZXQgcGFyZW50RGl2ID0gY2hlY2tDaGVja2VkLnBhcmVudEVsZW1lbnQ7XG4gIGlmIChjaGVja0NoZWNrZWQuY2hlY2tlZCA9PT0gdHJ1ZSkge1xuICAgIHBhcmVudERpdi5jbGFzc0xpc3QuYWRkKCdmaW5pc2hlZCcpO1xuICB9XG4gIGVsc2Uge1xuICAgIHBhcmVudERpdi5jbGFzc0xpc3QucmVtb3ZlKCdmaW5pc2hlZCcpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZURpdihyZW1vdmVkRGl2KSB7XG4gIGlmIChyZW1vdmVkRGl2ICE9IChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGVudCcpKSl7XG4gICAgbGV0IHBhcmFudERpdiA9IHJlbW92ZWREaXYucGFyZW50RWxlbWVudDtcbiAgICBwYXJhbnREaXYucmVtb3ZlQ2hpbGQocmVtb3ZlZERpdilcbiAgfVxufVxuXG5cblxuY29uc3QgbWFpbkxpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbi1saXN0Jyk7XG5sZXQgdG9kYXlzRGF0ZSA9IG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKClcbmxldCB0b3BCYXJEYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RvcC1iYXItZGF0ZScpXG50b3BCYXJEYXRlLmlubmVyVGV4dCA9IHRvZGF5c0RhdGVcbmxldCBtYWluTGlzdERpc3BsYXkgPSBuZXcgVG9Eb0xpc3QobWFpbkxpc3QpO1xubWFpbkxpc3REaXNwbGF5LnNob3dMaXN0OyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJUb0RvTGlzdCIsIml0ZW1MaXN0Iiwib3duRGl2IiwibmV3TGlzdENvbnRhaW5lciIsImxpc3REZXB0aCIsIm93bmVyTGlzdCIsIm93bmVySXRlbSIsImNvbnN0cnVjdG9yIiwib3duREl2IiwiYWRkSXRlbSIsInNob3dMaXN0IiwibWFrZUxpc3RBRGl2IiwidGhpc0xpc3QiLCJuZXdMaXN0RGl2IiwidGl0bGVEaXYiLCJkZXNjcmlwdGlvbkRpdiIsImlubmVyVGV4dCIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJyZW1vdmVJdGVtIiwic29ydExpc3QiLCJzb3J0IiwiYiIsInByaW9yaXR5IiwibGlzdERpdiIsImlubmVySFRNTCIsIml0ZW1EaXYiLCJuZXdDaGVja0JveCIsIm1ha2VGaW5pc2hlZENoZWNrQm94IiwibWFrZVJlbW92ZUJ1dHRvbiIsInBhcmVudEVsZW1lbnQiLCJwYXJlbnRJdGVtIiwiYWRkQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm5ld0RpdiIsInRlc3RGb3JtIiwiVG9Eb0Zvcm0iLCJyZW1vdmVCdXR0b24iLCJkaXYiLCJhZGRGb3JtIiwibWFrZVRhc2tCdXR0b24iLCJUb0RvSXRlbSIsImZpbmlzaGVkIiwiaW50ZXJuYWxTdGVwcyIsInRpdGxlRm9ybSIsImRlc2NyaXB0aW9uRm9ybSIsInByaW9yaXR5Rm9ybSIsIm1ha2VCdXR0b24iLCJmb3JtRGl2IiwiYWRkSXRlbVRvQnV0dG9uIiwibmV3SXRlbSIsImxhc3RDaGlsZCIsInZhbHVlIiwibmV3QnV0dG9uIiwiaW5wdXREaXYiLCJ0aXRsZUlucHV0IiwidGV4dENvbnRlbnQiLCJwcmlvcml0eURpdiIsInByaW9yaXR5SW5wdXQiLCJyZW1vdmVkRGl2IiwiZ2V0RWxlbWVudEJ5SWQiLCJyZW1vdmVEaXYiLCJhZGRCb3giLCJjaGVja0NoZWNrZWQiLCJwYXJlbnREaXYiLCJjaGVja2VkIiwiY2xhc3NMaXN0IiwiYWRkIiwidG9nZ2xlRmluaXNoZWQiLCJtYWluTGlzdCIsInRvZGF5c0RhdGUiLCJEYXRlIiwidG9Mb2NhbGVEYXRlU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==