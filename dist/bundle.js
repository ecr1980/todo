(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>a});var i=n(537),r=n.n(i),o=n(645),s=n.n(o)()(r());s.push([t.id,"body {\n  background-color: black;\n  color: white;\n}\n\n.new-list-div {\n  padding-left: 20px;\n}\n\n.form-div {\n  background-color: white;\n  color: black;\n}\n\n.finished {\n  background-color: gray;\n  color: black;\n  text-decoration: line-through;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,uBAAuB;EACvB,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,YAAY;EACZ,6BAA6B;AAC/B",sourcesContent:["body {\n  background-color: black;\n  color: white;\n}\n\n.new-list-div {\n  padding-left: 20px;\n}\n\n.form-div {\n  background-color: white;\n  color: black;\n}\n\n.finished {\n  background-color: gray;\n  color: black;\n  text-decoration: line-through;\n}"],sourceRoot:""}]);const a=s},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,r,o){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(i)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(s[c]=!0)}for(var d=0;d<t.length;d++){var l=[].concat(t[d]);i&&s[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),o="/*# ".concat(r," */"),s=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(s).concat([o]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var o={},s=[],a=0;a<t.length;a++){var c=t[a],d=i.base?c[0]+i.base:c[0],l=o[d]||0,u="".concat(d," ").concat(l);o[d]=l+1;var p=n(u),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(h);else{var m=r(h,i);i.byIndex=a,e.splice(a,0,{identifier:u,updater:m,references:1})}s.push(u)}return s}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var o=i(t=t||[],r=r||{});return function(t){t=t||[];for(var s=0;s<o.length;s++){var a=n(o[s]);e[a].references--}for(var c=i(t,r),d=0;d<o.length;d++){var l=n(o[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=c}}},569:t=>{var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,r&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(i){var r=e[i];if(void 0!==r)return r.exports;var o=e[i]={id:i,exports:{}};return t[i](o,o.exports,n),o.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{var t=n(379),e=n.n(t),i=n(795),r=n.n(i),o=n(569),s=n.n(o),a=n(565),c=n.n(a),d=n(216),l=n.n(d),u=n(589),p=n.n(u),h=n(426),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),e()(h.Z,m),h.Z&&h.Z.locals&&h.Z.locals;class v{itemList;ownDiv;newListContainer;listDepth;constructor(t,e=0){this.itemList=[],this.ownDiv=t,this.newListContainer=document.createElement("div"),this.listDepth=e}addItem(t){this.itemList.push(t),this.showList}makeListADiv(t){const e=document.createElement("div"),n=document.createElement("div"),i=document.createElement("div"),r=t.itemList;return e.setAttribute("class","new-list-div"),e.appendChild(n),e.appendChild(i),e.appendChild(this.newListContainer),r.showList,n.innerText=t.title,i.innerText=t.description,e}removeItem(t){let e=this.itemList.splice(t);this.itemList=e}sortList(){this.itemList.sort(((t,e)=>t.priority-e.priority))}get showList(){let t=document.createElement("div");if(0===this.itemList.length)t.innerHTML="";else{this.sortList();for(let e=0;e<this.itemList.length;e++){let n=document.createElement("div"),i=y(e,this.listDepth);n=this.makeListADiv(this.itemList[e]),n.appendChild(i),t.appendChild(n),this.itemList[e].showList}}return t.appendChild(function(t,e){const n=document.createElement("button");return n.setAttribute("class","show-add-form"),n.setAttribute("id","show-add-form"),n.innerText="Add Task",n.addEventListener("click",(()=>{!function(t,e,n){const i=t.parentElement,r=document.createElement("div"),o=new A(e,n);let s=C(r);r.setAttribute("class","new-div"),i.appendChild(r),r.appendChild(s),r.appendChild(o.div)}(n,t,e)})),n}(this,this.listDepth)),this.listDepth>0&&t.appendChild(C(this.ownDiv.parentElement)),this.ownDiv.innerHTML="",this.ownDiv.appendChild(t),t}}class f{title;description;priority;finished;internalSteps;itemList;itemDiv;constructor(t,e,n,i,r){this.title=t,this.description=e,this.priority=n,this.itemList=new v(i.newListContainer,r+1),this.finished=!1,this.itemDiv=this.itemList.ownDIv}}class A{parentItem;title;description;priority;listDepth;constructor(t,e){this.parentItem=t,this.title=this.titleForm(),this.description=this.descriptionForm(),this.priority=this.priorityForm(),this.listDepth=e;let n=this.makeButton();this.formDiv=document.createElement("div"),this.formDiv.setAttribute("class","form-div"),this.formDiv.appendChild(this.title),this.formDiv.appendChild(this.description),this.formDiv.appendChild(this.priority),this.formDiv.appendChild(n),n.addEventListener("click",(()=>{this.addItemToButton()}))}addItemToButton(){const t=new f(this.title.lastChild.value,this.description.lastChild.value,this.priority.lastChild.value,this.parentItem,this.listDepth);this.parentItem.addItem(t),this.parentItem.showList}makeButton(){let t=document.createElement("button");return t.setAttribute("id","toDoSubmit"),t.innerHTML="Add Item",t}titleForm(){let t=document.createElement("div"),e=document.createElement("div"),n=document.createElement("input");return e.textContent="Task",n.setAttribute("type","text"),n.setAttribute("id","title"),n.setAttribute("name","title"),t.appendChild(e),t.appendChild(n),t}descriptionForm(){let t=document.createElement("div"),e=document.createElement("div"),n=document.createElement("input");return e.textContent="Description",n.setAttribute("type","text"),n.setAttribute("id","description"),n.setAttribute("name","description"),t.appendChild(e),t.appendChild(n),t}get div(){return this.formDiv}priorityForm(){let t=document.createElement("div"),e=document.createElement("div"),n=document.createElement("input");return t.textContent="Priority",n.setAttribute("type","number"),n.setAttribute("id","priority"),n.setAttribute("name","priority"),t.appendChild(e),t.appendChild(n),t}}const b=document.getElementById("main-list");function C(t){const e=document.createElement("button");return e.setAttribute("class","remove-element"),e.setAttribute("id","remove-element"),e.innerText="Cancel",e.addEventListener("click",(()=>{!function(t){t.parentElement.removeChild(t)}(t)})),e}function y(t,e){const n=document.createElement("input");return n.setAttribute("type","checkbox"),n.addEventListener("change",(()=>{!function(t,e){let n=document.getElementById(`finished-${t}-${e}`),i=n.parentElement;!0===n.checked?i.classList.add("finished"):i.classList.remove("finished")}(t,e)})),n.setAttribute("id",`finished-${t}-${e}`),n.setAttribute("name",`finished-${t}-${e}`),n}new v(b).showList})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,