(()=>{"use strict";var n={426:(n,t,e)=>{e.d(t,{Z:()=>a});var r=e(537),o=e.n(r),i=e(645),A=e.n(i)()(o());A.push([n.id,"body {\n  background-color: black;\n  color: white;\n  position: relative;\n}\n\n.back {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n}\n\n.content {\n  display: grid;\n  grid-template-columns: 240px 1fr;\n}\n\n.content-window {\n  background-color:rgb(206, 206, 206);\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  padding-left: 5vw;\n  padding-right: 5vw;\n}\n\n.display {\n  background-color: white;\n  color: black;\n  border-style: solid;\n  border-width: 2px;\n  border-color: black;\n  border-radius: 20px;\n  display: grid;\n  grid-template-columns: 9fr 1fr;\n  grid-template-rows: max-content max-content 1fr;\n  padding: 20px;\n  position: relative;\n  height: 70vh;\n  margin-bottom: 10px;\n}\n\n.new-list-div {\n  padding-left: 20px;\n}\n\n.form-div {\n  background-color: white;\n  color: black;\n}\n\n.finished {\n  background-color: gray;\n  color: black;\n  text-decoration: line-through;\n}\n\n.main-list {\nbackground-color: black;\ndisplay: grid;\ngap: 5px;\nheight: 90vh;\ngrid-auto-rows: max-content;\n}\n\n.main-list-item {\n  border-style: solid;\n  border-width: 2px;\n  border-color:  rgb(116, 116, 116) rgb(116, 116, 116) rgb(46, 46, 46) rgb(46, 46, 46);\n  background-color: rgb(56, 55, 55);\n  color: white;\n  height: 30px;\n  width: 200px;\n  display: grid;\n  align-items: center;\n  justify-content: start;\n  padding-left: 20px;\n}\n\n.main-list-item:active {\n  background-color: rgb(96, 96, 96);\n}\n\n.parent-divs {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.parent-div {\n  background-color: white;\n  color: black;\n  border-style: solid;\n  border-width: 2px;\n  border-color: black;\n  border-radius: 20px;\n  padding: 20px;\n  height: 5vh;\n  width: 10vw;\n}\n\n.task {\n  border-style: solid;\n  border-width: 2px;\n  border-color:  rgb(196, 196, 196) rgb(196, 196, 196) rgb(156, 156, 156) rgb(156, 156, 156);\n  background-color: rgb(226, 226, 226);\n  height: 30px;\n  width: 200px;\n  display: grid;\n  align-items: center;\n  justify-content: start;\n  padding-left: 20px;\n}\n\n.task:active {\n  background-color: rgb(186, 186, 186);\n}\n\n.content-tasks {\n  display: grid;\n  gap: 5px;\n}\n\n.title, .description {\n  grid-column-start: 1;\n  grid-column-end: 3;\n}\n\n.top-bar {\n  display: flex;\n  flex-direction: row;\n  align-content: space-between;\n\n}\n\n.top-bar-date {\n  padding-left: 20px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,uBAAuB;EACvB,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;AACb;;AAEA;EACE,aAAa;EACb,gCAAgC;AAClC;;AAEA;EACE,mCAAmC;EACnC,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,mBAAmB;EACnB,iBAAiB;EACjB,mBAAmB;EACnB,mBAAmB;EACnB,aAAa;EACb,8BAA8B;EAC9B,+CAA+C;EAC/C,aAAa;EACb,kBAAkB;EAClB,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,YAAY;EACZ,6BAA6B;AAC/B;;AAEA;AACA,uBAAuB;AACvB,aAAa;AACb,QAAQ;AACR,YAAY;AACZ,2BAA2B;AAC3B;;AAEA;EACE,mBAAmB;EACnB,iBAAiB;EACjB,oFAAoF;EACpF,iCAAiC;EACjC,YAAY;EACZ,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,mBAAmB;EACnB,iBAAiB;EACjB,mBAAmB;EACnB,mBAAmB;EACnB,aAAa;EACb,WAAW;EACX,WAAW;AACb;;AAEA;EACE,mBAAmB;EACnB,iBAAiB;EACjB,0FAA0F;EAC1F,oCAAoC;EACpC,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,QAAQ;AACV;;AAEA;EACE,oBAAoB;EACpB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,4BAA4B;;AAE9B;;AAEA;EACE,kBAAkB;AACpB",sourcesContent:["body {\n  background-color: black;\n  color: white;\n  position: relative;\n}\n\n.back {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n}\n\n.content {\n  display: grid;\n  grid-template-columns: 240px 1fr;\n}\n\n.content-window {\n  background-color:rgb(206, 206, 206);\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  padding-left: 5vw;\n  padding-right: 5vw;\n}\n\n.display {\n  background-color: white;\n  color: black;\n  border-style: solid;\n  border-width: 2px;\n  border-color: black;\n  border-radius: 20px;\n  display: grid;\n  grid-template-columns: 9fr 1fr;\n  grid-template-rows: max-content max-content 1fr;\n  padding: 20px;\n  position: relative;\n  height: 70vh;\n  margin-bottom: 10px;\n}\n\n.new-list-div {\n  padding-left: 20px;\n}\n\n.form-div {\n  background-color: white;\n  color: black;\n}\n\n.finished {\n  background-color: gray;\n  color: black;\n  text-decoration: line-through;\n}\n\n.main-list {\nbackground-color: black;\ndisplay: grid;\ngap: 5px;\nheight: 90vh;\ngrid-auto-rows: max-content;\n}\n\n.main-list-item {\n  border-style: solid;\n  border-width: 2px;\n  border-color:  rgb(116, 116, 116) rgb(116, 116, 116) rgb(46, 46, 46) rgb(46, 46, 46);\n  background-color: rgb(56, 55, 55);\n  color: white;\n  height: 30px;\n  width: 200px;\n  display: grid;\n  align-items: center;\n  justify-content: start;\n  padding-left: 20px;\n}\n\n.main-list-item:active {\n  background-color: rgb(96, 96, 96);\n}\n\n.parent-divs {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.parent-div {\n  background-color: white;\n  color: black;\n  border-style: solid;\n  border-width: 2px;\n  border-color: black;\n  border-radius: 20px;\n  padding: 20px;\n  height: 5vh;\n  width: 10vw;\n}\n\n.task {\n  border-style: solid;\n  border-width: 2px;\n  border-color:  rgb(196, 196, 196) rgb(196, 196, 196) rgb(156, 156, 156) rgb(156, 156, 156);\n  background-color: rgb(226, 226, 226);\n  height: 30px;\n  width: 200px;\n  display: grid;\n  align-items: center;\n  justify-content: start;\n  padding-left: 20px;\n}\n\n.task:active {\n  background-color: rgb(186, 186, 186);\n}\n\n.content-tasks {\n  display: grid;\n  gap: 5px;\n}\n\n.title, .description {\n  grid-column-start: 1;\n  grid-column-end: 3;\n}\n\n.top-bar {\n  display: flex;\n  flex-direction: row;\n  align-content: space-between;\n\n}\n\n.top-bar-date {\n  padding-left: 20px;\n}"],sourceRoot:""}]);const a=A},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(A[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&A[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),t.push(d))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),A=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(A).concat([i]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var i={},A=[],a=0;a<n.length;a++){var c=n[a],s=r.base?c[0]+r.base:c[0],d=i[s]||0,l="".concat(s," ").concat(d);i[s]=d+1;var p=e(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var g=o(u,r);r.byIndex=a,t.splice(a,0,{identifier:l,updater:g,references:1})}A.push(l)}return A}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=e(i[A]);t[a].references--}for(var c=r(n,o),s=0;s<i.length;s++){var d=e(i[s]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=c}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return n[r](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),r=e(795),o=e.n(r),i=e(569),A=e.n(i),a=e(565),c=e.n(a),s=e(216),d=e.n(s),l=e(589),p=e.n(l),u=e(426),g={};g.styleTagTransform=p(),g.setAttributes=c(),g.insert=A().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=d(),t()(u.Z,g),u.Z&&u.Z.locals&&u.Z.locals;class b{items;listDepth;constructor(n=0){this.items=[],this.listDepth=n}addItem(n){this.items.push(n)}}class m{title;description;priority;finished;itemList;constructor(n="test",t="test",e=1,r){this.title=n,this.description=t,this.priority=e,this.itemList=new b(r+1),this.finished=!1,this.itemDiv=this.itemList.ownDIv}}let B=new b,C=new m,E=new m,h=new m,f=new m;console.log(B.items),B.addItem(C),B.addItem(E),console.log(C.itemList.items),C.itemList.addItem(h),E.itemList.addItem(f),console.log(C.itemList.items),console.log(E.itemList.items),console.log(B.items)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,